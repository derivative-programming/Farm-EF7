using System;
using System.Reflection;
using System.Collections.Specialized;
using System.Configuration.Provider;
using System.Data;
using System.Configuration;
using System.Threading.Tasks;
using FS.Common.Objects;
namespace FS.Farm.Reports.Providers
{
    internal abstract partial class FarmReportProvider : System.Configuration.Provider.ProviderBase
    {
        public abstract IDataReader GenerateLandPlantListReport(
            SessionContext context,
            Guid flavorFilterCode,
            Int32 someFilterIntVal,
            Int64 someFilterBigIntVal,
            Double someFilterFloatVal,
            Boolean someFilterBitVal,
            Boolean isFilterEditAllowed,
            Boolean isFilterDeleteAllowed,
            Decimal someFilterDecimalVal,
            DateTime someMinUTCDateTimeVal,
            DateTime someMinDateVal,
            Decimal someFilterMoneyVal,
            String someFilterNVarCharVal,
            String someFilterVarCharVal,
            String someFilterTextVal,
            String someFilterPhoneNumber,
            String someFilterEmailAddress,
            String someFilterUniqueIdentifier,
            int pageNumber,
            int itemCountPerPage,
            string orderByColumnName,
            bool orderByDescending,
            System.Guid userID,
            System.Guid contextCode);
        public abstract Task<IDataReader> GenerateLandPlantListReportAsync(
            SessionContext context,
            Guid flavorFilterCode,
            Int32 someFilterIntVal,
            Int64 someFilterBigIntVal,
            Double someFilterFloatVal,
            Boolean someFilterBitVal,
            Boolean isFilterEditAllowed,
            Boolean isFilterDeleteAllowed,
            Decimal someFilterDecimalVal,
            DateTime someMinUTCDateTimeVal,
            DateTime someMinDateVal,
            Decimal someFilterMoneyVal,
            String someFilterNVarCharVal,
            String someFilterVarCharVal,
            String someFilterTextVal,
            String someFilterPhoneNumber,
            String someFilterEmailAddress,
            String someFilterUniqueIdentifier,
            int pageNumber,
            int itemCountPerPage,
            string orderByColumnName,
            bool orderByDescending,
            System.Guid userID,
            System.Guid contextCode);
        public abstract int GetLandPlantListReportItemCount(
            SessionContext context,
            Guid flavorFilterCode,
            Int32 someFilterIntVal,
            Int64 someFilterBigIntVal,
            Double someFilterFloatVal,
            Boolean someFilterBitVal,
            Boolean isFilterEditAllowed,
            Boolean isFilterDeleteAllowed,
            Decimal someFilterDecimalVal,
            DateTime someMinUTCDateTimeVal,
            DateTime someMinDateVal,
            Decimal someFilterMoneyVal,
            String someFilterNVarCharVal,
            String someFilterVarCharVal,
            String someFilterTextVal,
            String someFilterPhoneNumber,
            String someFilterEmailAddress,
            String someFilterUniqueIdentifier,
            System.Guid userID,
            System.Guid contextCode,
            int itemCountPerPage,
            ref int pageCount);
        public abstract Task<int> GetLandPlantListReportItemCountAsync(
            SessionContext context,
            Guid flavorFilterCode,
            Int32 someFilterIntVal,
            Int64 someFilterBigIntVal,
            Double someFilterFloatVal,
            Boolean someFilterBitVal,
            Boolean isFilterEditAllowed,
            Boolean isFilterDeleteAllowed,
            Decimal someFilterDecimalVal,
            DateTime someMinUTCDateTimeVal,
            DateTime someMinDateVal,
            Decimal someFilterMoneyVal,
            String someFilterNVarCharVal,
            String someFilterVarCharVal,
            String someFilterTextVal,
            String someFilterPhoneNumber,
            String someFilterEmailAddress,
            String someFilterUniqueIdentifier,
            System.Guid userID,
            System.Guid contextCode,
           int itemCountPerPage );
        public abstract IDataReader GetLandPlantListReportSummary(
            SessionContext context,
            Guid flavorFilterCode,
            Int32 someFilterIntVal,
            Int64 someFilterBigIntVal,
            Double someFilterFloatVal,
            Boolean someFilterBitVal,
            Boolean isFilterEditAllowed,
            Boolean isFilterDeleteAllowed,
            Decimal someFilterDecimalVal,
            DateTime someMinUTCDateTimeVal,
            DateTime someMinDateVal,
            Decimal someFilterMoneyVal,
            String someFilterNVarCharVal,
            String someFilterVarCharVal,
            String someFilterTextVal,
            String someFilterPhoneNumber,
            String someFilterEmailAddress,
            String someFilterUniqueIdentifier,
            System.Guid userID,
            System.Guid contextCode);
        public abstract Task<IDataReader> GetLandPlantListReportSummaryAsync(
            SessionContext context,
            Guid flavorFilterCode,
            Int32 someFilterIntVal,
            Int64 someFilterBigIntVal,
            Double someFilterFloatVal,
            Boolean someFilterBitVal,
            Boolean isFilterEditAllowed,
            Boolean isFilterDeleteAllowed,
            Decimal someFilterDecimalVal,
            DateTime someMinUTCDateTimeVal,
            DateTime someMinDateVal,
            Decimal someFilterMoneyVal,
            String someFilterNVarCharVal,
            String someFilterVarCharVal,
            String someFilterTextVal,
            String someFilterPhoneNumber,
            String someFilterEmailAddress,
            String someFilterUniqueIdentifier,
            System.Guid userID,
            System.Guid contextCode);
    }
}
